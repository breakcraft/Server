[label,pvm_rune_thrownaxe_sa]
def_obj $rhand = inv_getobj(worn, ^wearpos_rhand);
anim(chainhit, 0);
spotanim_pl(sp_attack_chainhit_launch_spotanim, 96, 0);

def_coord $origin = npc_coord;
def_npc_uid $target1 = npc_uid;
def_int $duration = ~pvm_rune_thrownaxe_hit(coord, $target1, 32);
if ($duration = null) { // this shouldnt ever be reached
    ~pvm_thrownaxe_drop_sa($rhand, divide($duration, 30));
    return;
}
def_npc_uid $target2 = ~pvm_rune_thrownaxe_hunt($origin, $target1, null, null, null);
$duration = ~pvm_rune_thrownaxe_hit(npc_coord, $target2, $duration);
if ($duration = null) { // spec is over
    if (npc_finduid($target1) = true) {
        ~pvm_thrownaxe_drop_sa($rhand, divide($duration, 30));
    }
    return;
}
def_npc_uid $target3 = ~pvm_rune_thrownaxe_hunt($origin, $target1, $target2, null, null);
$duration = ~pvm_rune_thrownaxe_hit(npc_coord, $target3, $duration);
if ($duration = null) { // spec is over
    if (npc_finduid($target2) = true) {
        ~pvm_thrownaxe_drop_sa($rhand, divide($duration, 30));
    }
    return;
}
def_npc_uid $target4 = ~pvm_rune_thrownaxe_hunt($origin, $target1, $target2, $target3, null);
$duration = ~pvm_rune_thrownaxe_hit(npc_coord, $target4, $duration);
if ($duration = null) { // spec is over
    if (npc_finduid($target3) = true) {
        ~pvm_thrownaxe_drop_sa($rhand, divide($duration, 30));
    }
    return;
}
def_npc_uid $target5 = ~pvm_rune_thrownaxe_hunt($origin, $target1, $target2, $target3, $target4);
$duration = ~pvm_rune_thrownaxe_hit(npc_coord, $target5, $duration);
if ($duration = null) { // spec is over
    if (npc_finduid($target4) = true) {
        ~pvm_thrownaxe_drop_sa($rhand, divide($duration, 30));
    }
    return;
}
~pvm_thrownaxe_drop_sa($rhand, divide($duration, 30));

[proc,pvm_rune_thrownaxe_hunt](coord $origin, npc_uid $target1, npc_uid $target2, npc_uid $target3, npc_uid $target4)(npc_uid)
npc_huntall($origin, 3, ^vis_lineofsight);
while (.npc_huntnext = true) {
    if (.npc_uid ! $target1 & .npc_uid ! $target2 & .npc_uid ! $target3 & .npc_uid ! $target4) {
        // test: player in multi, 1st target in singles, 2nd target in multi
        // - result: chains onto 2nd target
        // test: player in singles, 1st and 2nd target in multi
        // - result: no chain
        // test: player in multi, 1st target in multi, 2nd target in singles
        // - result: no chain
        // conclusion: it checks multi for coord() and next target npc_coord()
        if (map_multiway(coord) = true & map_multiway(.npc_coord) = true) {
            return(.npc_uid);
        }
    }
}
return(null);

[proc,pvm_rune_thrownaxe_hit](coord $start, npc_uid $target, int $duration)(int)
if (stat(hitpoints) = 0) { // inferred from dragon dagger
    return(null);
}
if ($target = null) {
    return(null);
}
if (npc_finduid($target) = false) {
    return(null);
}
if (~npc_is_attackable = false) {
    return(null);
}
if (~sa_enough_energy = false) {
    return(null);
}
def_obj $ammo = inv_getobj(worn, ^wearpos_rhand);

~set_sa_vars(oc_param($ammo, sa_energy));

def_int $damage = 0;
def_int $combat_stat = ~combat_stat(add(stat(ranged), 10), oc_param($ammo, rangebonus)); // + 10 ranged levels
def_int $maxhit = ~combat_maxhit($combat_stat);

$duration = ~npc_projectile($start, npc_uid, sp_attack_chainhit_travel_spotanim, 40, 36, $duration, 15, 0, 11, 5);
def_boolean $hit = ~player_npc_hit_roll(%damagetype);
if ($hit = true) {
    if (npc_type = count_draynor & inv_total(inv, garlic) > 0) {
        $maxhit = add($maxhit, 1);
    }
    $damage = randominc(min($maxhit, npc_param(max_dealt)));
    def_int $damage_capped = min($damage, npc_stat(hitpoints));
    ~give_combat_experience(%damagestyle, $damage_capped, %npc_combat_xp_multiplier);
    npc_heropoints($damage_capped);
}

def_int $poison_severity = oc_param($ammo, poison_severity);
if ($damage > 0 & $poison_severity > 0 & random(4) = 0) { // 1/4 chance to poison
    // poison npc
    ~npc_poison_start($poison_severity);
}
~npc_retaliate(add(divide($duration, 30), 1));
npc_queue(2, $damage, add(divide($duration, 30), 1));
npc_anim(npc_param(defend_anim), $duration);
if (npc_param(defend_sound) ! null) {
    sound_synth(npc_param(defend_sound), 0, $duration);
}
if ($hit = false) {
    return(null);
}
return($duration);

[proc,pvm_thrownaxe_drop_sa](obj $rhand, int $duration)
~ranged_dropammo_npc($rhand, divide($duration, 30));
if (inv_total(worn, $rhand) = 0) {
    mes("That was your last one!");
    p_stopaction;
    ~update_all($rhand);
}
